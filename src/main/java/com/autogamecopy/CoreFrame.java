/*
 * Copyright (C) 2016 Benjamin Schellenberger
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.autogamecopy;

import com.autogamecopy.datamodel.Game;
import com.autogamecopy.util.Global;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Ben
 */
public class CoreFrame extends javax.swing.JFrame {

    private final DefaultComboBoxModel<Game> model = new DefaultComboBoxModel<>();

    /**
     * Creates new form MainWindow
     */
    public CoreFrame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboGameSelect = new javax.swing.JComboBox<>();
        lblGame = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        mnuMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuExit = new javax.swing.JMenuItem();
        mnuAbout = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Global.APPLICATION_TITLE + " v" + Global.APPLICATION_VERSION);

        cboGameSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboGameSelectItemStateChanged(evt);
            }
        });

        lblGame.setText("Game:");

        btnDelete.setText("Del");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        mnuFile.setMnemonic('f');
        mnuFile.setText("File");

        mnuExit.setMnemonic('x');
        mnuExit.setText("Exit");
        mnuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuExit);

        mnuMain.add(mnuFile);

        mnuAbout.setText("About...");
        mnuAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mnuAboutMouseClicked(evt);
            }
        });
        mnuMain.add(mnuAbout);

        setJMenuBar(mnuMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboGameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboGameSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGame)
                    .addComponent(btnDelete))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuExitActionPerformed
        int response = JOptionPane.showConfirmDialog(CoreFrame.this, "Are you sure you wish to Exit?", "Exit Auto Game Copy?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
            setVisible(false);
            Global.EXIT_APPLICATION();
        }
    }//GEN-LAST:event_mnuExitActionPerformed

    private void cboGameSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboGameSelectItemStateChanged
        if (ItemEvent.SELECTED == evt.getStateChange()) {
            Game game = cboGameSelect.getItemAt(cboGameSelect.getSelectedIndex());
            if (game instanceof AddNewGame) {
                String name = JOptionPane.showInputDialog("Enter Name:");
                if (name != null) {
                    Game newGame = new Game();
                    newGame.setTitle(name);
                    model.addElement(newGame);
                    cboGameSelect.revalidate();
                }
            }
        }
    }//GEN-LAST:event_cboGameSelectItemStateChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        final Object selected = model.getSelectedItem();
        if (selected == null || selected instanceof AddNewGame || selected.toString().trim().isEmpty()) {
            return;
        }

        int response = JOptionPane.showConfirmDialog(this, "Are you sure you wish to remove " + selected.toString(), "Delete Game", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            cboGameSelect.setSelectedIndex(-1);
            model.removeElement(selected);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void mnuAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mnuAboutMouseClicked
        AboutDialog ad = new AboutDialog(CoreFrame.this);
        ad.setLocationRelativeTo(null);
        ad.setVisible(true);
    }//GEN-LAST:event_mnuAboutMouseClicked

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JComboBox<Game> cboGameSelect;
    private javax.swing.JLabel lblGame;
    private javax.swing.JMenu mnuAbout;
    private javax.swing.JMenuItem mnuExit;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuBar mnuMain;
    // End of variables declaration//GEN-END:variables

    private void init() {
        cboGameSelect.setModel(model);
        model.addElement(new Game());
        model.addElement(new AddNewGame());
    }

    private static final class AddNewGame extends Game {

        @Override
        public String toString() {
            return "Add...";
        }

    }
}
